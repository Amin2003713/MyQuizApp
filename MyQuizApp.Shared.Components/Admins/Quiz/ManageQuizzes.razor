@page "/Admins/Quiz/ManageQuizzes"
@using MyQuizApp.Infra.Quiezzes
@using Microsoft.AspNetCore.Components.QuickGrid
@using MyQuizApp.Domain.Quizzes

@inject IQuizApi QuizApi

<h1>Quiz List</h1>

@if (IsLoading)
{
    <p>Loading quizzes...</p>
}
else if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p class="text-danger">@ErrorMessage</p>
}
else if (Quizzes != null && Quizzes.Any())
{
    <QuickGrid Items="Quizzes" Class="table">
        <PropertyColumn Title="Name" Property="quiz => quiz.Name"/>
        <PropertyColumn Title="Category" Property="quiz => quiz.Category.Name"/>
        <TemplateColumn Title="Actions">
            <table context="quiz">
                <a href="/quizzes/details/@context.Id" class="btn btn-info btn-sm">Details</a>
                <a href="/quizzes/edit/@context.Id" class="btn btn-warning btn-sm">Edit</a>
                <button class="btn btn-danger btn-sm" @onclick="() => DeleteQuiz(context.Id)">Delete</button>
            </table>
        </TemplateColumn>
    </QuickGrid>
}
else
{
    <p>No quizzes available.</p>
}

@code {
    private IQueryable<Quiz> Quizzes { get; set; } =default!;
    private bool IsLoading { get; set; } = true;
    private string? ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await QuizApi.GetAllQuizzesAsync();
            if (response.IsSuccess)
            {
                Quizzes = response.Data.AsQueryable();
            }
            else
            {
                ErrorMessage = response.Error;
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
        finally
        {
            IsLoading = false;
        }
    }

    private async Task DeleteQuiz(Guid quizId)
    {
        var response = await QuizApi.DeleteQuizAsync(quizId);
        if (response.IsSuccess)
        {
            await OnInitializedAsync();
            StateHasChanged();
        }
        else
        {
            ErrorMessage = response.Error;
        }
    }

}


