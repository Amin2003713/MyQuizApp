@page "/Login"
@using MyQuiz.App.Shared.Layout
@using MyQuizApp.Infra.Users
@layout AuthLayout
 @inject  IAuthClient Auth

 <div class="left-side">
     @if (Errors is not null)
     {
         <div class="errors">@Errors</div>
     }
 </div>

<div class="right-side">

    <EditForm Model="Requests" Enhance="true" OnValidSubmit="LoginAsync">
        <DataAnnotationsValidator/>
        <div class="form-container">
            <div class="mb-3">
                <label class="form-label">Email:</label>
                <InputText @bind-Value="Requests.Email" DisplayName="Email"/>
                <ValidationMessage For="() => Requests.Email"/>
            </div>

            <div class="mb-3">
                <label class="form-label">Password:</label>
                <InputText @bind-Value="Requests.Password" DisplayName="Password"/>
                <ValidationMessage For="() => Requests.Password"/>
            </div>
        </div>

        <button type="submit" class="login-btn">Sign in</button>
        @* <div class="links"> *@
        @*     <a href="#">Forgot password?</a> *@
        @*     <a href="#">Do not have an account?</a> *@
        @* </div> *@
    </EditForm>
</div>

@code{

    public LoginRequests Requests { get; set; } = new LoginRequests();
    private string? Errors = null!;

    private async Task LoginAsync(EditContext arg)
    {
        try
        {
            var result = await Auth.Login(Requests);

            if (result.HasError)
                Errors = result.Error;

        }
        catch(Exception e)
        {
            Errors = e.ToString();
        }
        return;

    }                       

}